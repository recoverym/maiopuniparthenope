<?php
/**
 * @file
 * Install, update and uninstall functions for the limesurvey_sync module.
 */

/**
 * Implements hook_install().
 *
 * Define default values for the LimeSurvey synchronization settings.
 */
function limesurvey_sync_install() {
  $default_ls_settings = array(
    'ls_path' => "http://{$_SERVER['HTTP_HOST']}/limesurvey",
    'ls_delta_time' => 0,
  );
  variable_set('ls_settings', $default_ls_settings);
}

/**
 * Implements hook_uninstall().
 *
 * Delete the LimeSurvey synchronization settings.
 */
function limesurvey_sync_uninstall() {
  variable_del('ls_settings');
}

/**
 * Implements hook_requirements().
 *
 * Check the LimeSurvey synchronization settings.
 */
function limesurvey_sync_requirements($phase) {

  if ($phase != 'runtime') {
    return array();
  }
  // Ensure translations don't break at install time
  $t = get_t();

  $empty_ls_settings = array(
    'ls_path' => FALSE,
    'ls_delta_time' => FALSE,
  );
  $settings =  variable_get('ls_settings', $empty_ls_settings);
  module_load_include('inc', 'limesurvey_sync', 'limesurvey_sync');
  $result = limesurvey_sync_test_interface($settings);
  $requirement_severity = REQUIREMENT_OK;
  $requirement_message = $t('LimeSurvey site reachable');
  foreach ($result as $datas) {
    if ($datas['result'] === FALSE) {
      $requirement_severity = REQUIREMENT_ERROR;
      $requirement_message = $t('LimeSurvey site not reachable');
      break;
    }
    elseif ($datas['result'] === NULL) {
      $requirement_severity = REQUIREMENT_WARNING;
      $requirement_message = $t('LimeSurvey site may not be reached');
    }
  }

  return array(
    array(
      'title' => $t('LimeSurvey Sync'),
      'value' => $requirement_message,
      'description' => $t('The LimeSurvey Sync module needs to connect to the LimeSurvey database and to reach the LimeSurvey site via http. Check the <a href="@url">LimeSurvey setting page</a> for more information.', array('@url' => url('admin/config/ls_sync'))),
      'severity' => $requirement_severity,
    ),
  );
}
